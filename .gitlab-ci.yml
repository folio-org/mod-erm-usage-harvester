stages:
- build_jar
- build_image
- publish
- deploy

variables:
  production_repo: ubleipzig/folio-mod-erm-usage-harvester
  staging_repo: services.ub.uni-leipzig.de:11443/bdd_dev/folio/mod-erm-usage-harvester
  alpha_repo: services.ub.uni-leipzig.de:11443/bdd_dev/folio/mod-erm-usage-harvester

openjdk_8:
  stage: build_jar
  image: maven:3.6.0-jdk-8
  script: |
    # installs locale for embeddedpostgres
    apt-get update && apt-get install locales -y
    echo "en_US.UTF-8 UTF-8">/etc/locale.gen
    /usr/sbin/locale-gen

    # adds non-root user for building and testing
    echo "maven:x:1000:1000::${CI_PROJECT_DIR}/.maven:/bin/bash">>/etc/passwd
    mkdir -p .maven
    chown maven .maven -R

    # set proxy fo building
    cat >> /etc/java-8-openjdk/net.properties <<EOF
    http.proxyHost=proxy.uni-leipzig.de
    https.proxyHost=proxy.uni-leipzig.de
    ftp.proxyHost=proxy.uni-leipzig.de
    http.proxyPort=3128
    https.proxyPort=3128
    ftp.proxyPort=3128
    http.nonProxyHosts=localhost|127.*|*.uni-leipzig.de
    https.nonProxyHosts=localhost|127.*|*.uni-leipzig.de
    ftp.nonProxyHosts=localhost|127.*|*.uni-leipzig.de
    EOF

    # build and test
    su maven -c "mvn clean install"
  tags:
  - docker
  cache:
    key: maven
    paths:
    - .maven
  artifacts:
    paths:
    - mod-erm-usage-harvester-bundle/target
    - target

build_image:
  stage: build_image
  image: ubleipzig/deployer:1.4.7
  services:
  - docker:dind
  script: |
    deployer build
    git clone https://git.sc.uni-leipzig.de/ubl/amsl/deployment/images/backend-modules.git
    deployer build \
      --build-arg ID=$(jq -r '.id' < target/ModuleDescriptor.json) \
      --docker-file ubl/Dockerfile \
      --output image.tar.gz
  tags:
  - docker
  artifacts:
    paths:
    - image.tar.gz
  dependencies:
  - openjdk_8

publish_alpha_image:
  stage: publish
  image: ubleipzig/deployer:1.4.7
  services:
  - docker:dind
  script: |
    deployer publish \
      --docker-config "${DOCKER_ALPHA_AUTH_CONFIG}" \
      --input image.tar.gz \
      --name ${alpha_repo} \
      --tag ${CI_COMMIT_REF_SLUG}
  tags:
  - docker
  only:
  - branches
  except:
  - master

publish_staging_image:
  stage: publish
  image: ubleipzig/deployer:1.4.7
  services:
  - docker:dind
  script: |
    deployer publish \
      --docker-config "${DOCKER_STAGING_AUTH_CONFIG}" \
      --input image.tar.gz \
      --name ${staging_repo} \
      --tag staging
  tags:
    - docker
  only:
  - master

publish_production_image:
  stage: publish
  image: ubleipzig/deployer:1.4.7
  services:
  - docker:dind
  script: |
    declare major_version=`expr ${tag} ':' '\([^.]\+\)'`
    declare minor_version=`expr ${tag} ':' '[^.]\+\.\([^.]\+\)'`

    deployer publish \
      --docker-config "${DOCKER_PRODUCTION_AUTH_CONFIG}" \
      --input image.tar.gz \
      --name ${production_repo} \
      --tag latest \
      --tag ${tag} \
      --tag "${major_version}.${minor_version}" \
      --tag "${major_version}"
  tags:
    - docker
  except:
  - branches
  only:
  - /^release\/.*/

deploy_alpha:
  stage: deploy
  image: ubleipzig/deployer:1.4.7
  environment:
    name: alpha/${CI_COMMIT_REF_SLUG}
    on_stop: undeploy_alpha
  script: |
    deployer deploy --cluster-url "${K8S_ALPHA_CLUSTER_URL}" \
      --certificate-authority "${K8S_ALPHA_CLUSTER_CA}" \
      --token "${K8S_ALPHA_DEPLOY_TOKEN}" \
      --namespace "${K8S_ALPHA_CLUSTER_NAMESPACE}" \
      --service-account "${K8S_ALPHA_DEPLOY_USER}" \
      --name issue-${CI_COMMIT_REF_SLUG} \
      --charts ubl/helmchart \
      --timeout 300 \
      --set-string dockerconfigjson=$(echo $(echo "${DOCKER_ALPHA_AUTH_CONFIG}"|base64)|tr -d " ") \
      --set-string app.image.repository=${alpha_repo} \
      --set-string app.image.tag=${CI_COMMIT_REF_SLUG} \
      --set-string proxy.http_proxy=http://proxy.uni-leipzig.de:3128 \
      --set-string proxy.https_proxy=http://proxy.uni-leipzig.de:3128 \
      --set-string "proxy.no_proxy=localhost\,127.0.0.1\,.uni-leipzig.de" \
      --set-string okapi.host=okapi-app-service-alpha.folio-base-alpha.svc.cluster.local
  tags:
  - docker
  only:
  - branches
  except:
  - master

undeploy_alpha:
  stage: deploy
  image: ubleipzig/deployer:1.4.7
  environment:
    name: alpha/${CI_COMMIT_REF_SLUG}
    action: stop
  script: |
    deployer undeploy \
      --cluster-url "${K8S_ALPHA_CLUSTER_URL}" \
      --certificate-authority "${K8S_ALPHA_CLUSTER_CA}" \
      --token "${K8S_ALPHA_DEPLOY_TOKEN}" \
      --namespace "${K8S_ALPHA_CLUSTER_NAMESPACE}" \
      --service-account "${K8S_ALPHA_DEPLOY_USER}" \
      --name issue-${CI_COMMIT_REF_SLUG}
  tags:
  - docker
  when: manual
  only:
  - branches
  except:
  - master

deploy_staging:
  stage: deploy
  image: ubleipzig/deployer:1.4.7
  environment:
    name: staging
    on_stop: undeploy_staging
  script: |
    deployer deploy --cluster-url "${K8S_STAGING_CLUSTER_URL}" \
      --certificate-authority "${K8S_STAGING_CLUSTER_CA}" \
      --token "${K8S_STAGING_DEPLOY_TOKEN}" \
      --namespace "${K8S_STAGING_CLUSTER_NAMESPACE}" \
      --service-account "${K8S_STAGING_DEPLOY_USER}" \
      --name staging \
      --charts ubl/helmchart \
      --timeout 300 \
      --set-string dockerconfigjson=$(echo $(echo "${DOCKER_STAGING_AUTH_CONFIG}"|base64)|tr -d " ") \
      --set-string app.image.repository=${staging_repo} \
      --set-string app.image.tag=staging \
      --set-string proxy.http_proxy=http://proxy.uni-leipzig.de:3128 \
      --set-string proxy.https_proxy=http://proxy.uni-leipzig.de:3128 \
      --set-string "proxy.no_proxy=localhost\,127.0.0.1\,.uni-leipzig.de" \
      --set-string okapi.host=okapi-app-service-staging.folio-base-staging.svc.cluster.local
  tags:
  - docker
  only:
  - master

undeploy_staging:
  stage: deploy
  image: ubleipzig/deployer:1.4.7
  environment:
    name: staging
    action: stop
  script: |
    deployer undeploy \
      --cluster-url "${K8S_STAGING_CLUSTER_URL}" \
      --certificate-authority "${K8S_STAGING_CLUSTER_CA}" \
      --token "${K8S_STAGING_DEPLOY_TOKEN}" \
      --namespace "${K8S_STAGING_CLUSTER_NAMESPACE}" \
      --service-account "${K8S_STAGING_DEPLOY_USER}" \
      --name staging
  tags:
  - docker
  when: manual
  only:
  - master
